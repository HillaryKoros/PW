name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_OWNER: hkoros

jobs:
  release-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, mapserver, mapcache]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get release version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push release images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/${{ matrix.service }}.Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/pest_watch_${{ matrix.service }}:${{ steps.version.outputs.VERSION }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/pest_watch_${{ matrix.service }}:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-compose-files:
    needs: release-docker
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get release version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Update docker-compose files
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        
        # Update staging compose file
        sed -i "s/:v[0-9]\+\.[0-9]\+/:${VERSION}/g" docker-compose.staging.yml
        
        echo "Updated compose files to version ${VERSION}"

    - name: Commit updated compose files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -n "$(git status --porcelain)" ]; then
          git add docker-compose.staging.yml
          git commit -m "Update deployment to ${VERSION}"
          git push
        fi